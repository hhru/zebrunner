  map $http_upgrade $connection_upgrade {
    default  upgrade;
    ''       close;
  }

server {
    listen 80;
    server_name localhost;

    # Uncomment below block to setup SSL on this NGiNX instance. make sure to put ssl.crt and ssl.key to nginx/ssl shared folder
#    listen 443 ssl;
#    ssl_certificate /etc/nginx/ssl/ssl.crt;
#    ssl_certificate_key /etc/nginx/ssl/ssl.key;
#    ssl_session_timeout 5m;
#    ssl_session_cache shared:SSL:10m;
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
#    ssl_prefer_server_ciphers on;

    #to resolve issue with uploading to sonar huge project reports or uploading apk to STF (Error 413)
    client_max_body_size 1024M;

    resolver 127.0.0.11 valid=30s;
    resolver_timeout 10s;

    #charset koi8-r;

    location /sonarqube {
      set $upstream_sonar http://127.0.0.1:80;
      proxy_set_header Host sonarqube;
      proxy_pass $upstream_sonar;
      proxy_http_version 1.1;
    }

    #workaround for static jenkins icon svg
    location ~ /jenkins/static {
        set $upstream_jenkins jenkins-master:8080;
        proxy_pass http://$upstream_jenkins;
    }

    location ~ /jenkins.*.svg {
      set $upstream_zebrunner zebrunner-proxy:80;
      proxy_pass http://$upstream_zebrunner;
    }

    location /jenkins {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;

        #proxy_redirect off;
	#proxy_redirect http:// https://;
 
        if (!-f $request_filename) {
            set $upstream_jenkins http://jenkins-master:8080;
	    proxy_pass $upstream_jenkins;
            break;
        }
    }

    location ~ /(stf|auth/mock|auth/ldap|auth/contact|auth/api|static/app|static/logo|app/api|api/v1|s/upload|s/image|s/blob|s/apk) {
      set $upstream_stf stf-proxy:80;
      proxy_pass http://$upstream_stf;
      proxy_http_version 1.1;
    }

    location /d/ {
      set $upstream_stf stf-proxy:80;
      proxy_pass http://$upstream_stf;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Real-IP $remote_addr;
    }

    location /socket.io {
      set $upstream_stf stf-proxy:80;
      proxy_pass http://$upstream_stf;
      proxy_http_version 1.1;

      # two below headers to support websocket connection
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection upgrade;
    }

    #Selenoid VNC WebSocket for new agents and reporting 1.19+
    location  ~ ^/ws/vnc/(.*)$ {
      set $upstream_selenoid http://selenoid:4444;
      proxy_pass $upstream_selenoid/vnc/$1;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header Access-Control-Allow-Origin *;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
    }

    #TODO: remove below location when zafira-client becomes unsupported
    #Selenoid VNC WebSocket for deprecated zafira-client and reporting 1.19+
    location /vnc {
      set $upstream_selenoid http://selenoid:4444;
      proxy_pass $upstream_selenoid;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header Access-Control-Allow-Origin *;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy true;
    }

    location /video/ {
        root   /usr/share/nginx;
    }

# IMPORTANT!!! make sure to generate secure Selenoid/MCloud credentials and put them into the nginx/htpasswd/selenoid.htpasswd and mcloud.htpasswd files
#  1. install htpasswd utility and regenerate default credentials in *.htpasswd, for example
#       htpasswd -bc nginx/htpasswd/selenoid.htpasswd username password
#  2. Update appropriate Selenium/MCloud provider urls in Reporting and CI
#       http://username:password/hostname/selenoid/wd/hub
#       http://username:password/hostname/mcloud/wd/hub

    # Selenoid Hub
    location  ~ ^/selenoid/(.*)$ {
      auth_basic "Private Selenoid Hub";
      auth_basic_user_file /usr/share/nginx/htpasswd/selenoid.htpasswd;

      set $upstream_selenoid http://selenoid:4444;
      proxy_pass $upstream_selenoid/$1;

      proxy_http_version      1.1;
      proxy_set_header        Connection "";
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout   60;
      proxy_send_timeout      300;
      proxy_read_timeout      300;
      proxy_buffers           32 64m;
      proxy_buffer_size       64k;
      proxy_next_upstream    error timeout http_502 http_503 http_504;
      client_max_body_size    64m;
      client_body_buffer_size 64m;
      add_header Access-Control-Allow-Methods "GET,PUT,OPTIONS,POST,DELETE";
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Headers "Content-Type,Authorization";
      add_header Access-Control-Allow-Credentials "true";
    }

   location /mcloud {
      auth_basic "Private MCloud Selenium Hub";
      auth_basic_user_file /usr/share/nginx/htpasswd/mcloud.htpasswd;

      proxy_connect_timeout   60;
      proxy_send_timeout      300;
      proxy_read_timeout      300;

      set $upstream_mcloud http://127.0.0.1:80;
      proxy_set_header Host mcloud;
      proxy_pass $upstream_mcloud;
      proxy_http_version 1.1;
    }

    location /grid {
        root   /usr/share/nginx/html;
    }

    location / {
      set $upstream_stf stf-proxy:80;
      proxy_pass http://$upstream_stf;
      proxy_http_version 1.1;
#      set $upstream_default default-proxy-server;
#      proxy_set_header Host default-proxy-host;
#      proxy_pass http://$upstream_default;
#      proxy_http_version 1.1;

      # two below headers to support websocket connection
#      proxy_set_header Upgrade $http_upgrade;
#      proxy_set_header Connection upgrade;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

